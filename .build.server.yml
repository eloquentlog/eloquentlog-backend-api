---
steps:
  - id: 'cache'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker pull ${_REGISTRY_HOST}/$PROJECT_ID/${_SERVICE_NAME}:latest ||
        exit 0

  - id: 'build'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--file'
      - 'Dockerfile'
      - '--build-arg'
      - 'BINARY=${_BUILD_TARGET_NAME}'
      - '--tag'
      - '${_REGISTRY_HOST}/$PROJECT_ID/${_SERVICE_NAME}:latest'
      - '--cache-from'
      - '${_REGISTRY_HOST}/$PROJECT_ID/${_SERVICE_NAME}:latest'
      - '.'
    wait_for: ['cache']

  - id: 'push'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGISTRY_HOST}/$PROJECT_ID/${_SERVICE_NAME}:latest'
    wait_for: ['build']

  - id: 'run'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_REGISTRY_HOST}/$PROJECT_ID/${_SERVICE_NAME}:latest'
      - '--region'
      - '${_REGISTRY_REGION}'
      - '--platform'
      - 'managed'
      - '--add-cloudsql-instances'
      - '${_POSTGRES_INSTANCE}'
      - '--vpc-connector'
      - '${_REDIS_CONNECTOR}'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - >-
        INSTANCE_CONNECTION_NAME=${_POSTGRES_INSTANCE},
        ENV=${_ENV},
        ROCKET_HOST=${_ROCKET_HOST},
        ROCKET_PORT=${_ROCKET_PORT},
        ROCKET_CLI_COLORS=${_ROCKET_CLI_COLORS},
        ROCKET_KEEP_ALIVE=${_ROCKET_KEEP_ALIVE},
        APPLICATION_URL=${_APPLICATION_URL},
        AUTHENTICATION_TOKEN_ISSUER=${_AUTHENTICATION_TOKEN_ISSUER},
        AUTHENTICATION_TOKEN_KEY_ID=${_AUTHENTICATION_TOKEN_KEY_ID},
        AUTHENTICATION_TOKEN_SECRET=${_AUTHENTICATION_TOKEN_SECRET},
        COOKIE_DOMAIN=${_COOKIE_DOMAIN},
        COOKIE_SECURE=${_COOKIE_SECURE},
        DATABASE_URL=${_DATABASE_URL},
        MAILER_DOMAIN=${_MAILER_DOMAIN},
        MAILER_FROM_EMAIL=${_MAILER_FROM_EMAIL},
        MAILER_FROM_ALIAS=${_MAILER_FROM_ALIAS},
        MAILER_SMTP_HOST=${_MAILER_SMTP_HOST},
        MAILER_SMTP_PORT=${_MAILER_SMTP_PORT},
        MAILER_SMTP_USERNAME=${_MAILER_SMTP_USERNAME},
        MAILER_SMTP_PASSWORD=${_MAILER_SMTP_PASSWORD},
        MESSAGE_QUEUE_URL=${_MESSAGE_QUEUE_URL},
        SESSION_STORE_URL=${_SESSION_STORE_URL},
        VERIFICATION_TOKEN_ISSUER=${_VERIFICATION_TOKEN_ISSUER},
        VERIFICATION_TOKEN_KEY_ID=${_VERIFICATION_TOKEN_KEY_ID},
        VERIFICATION_TOKEN_SECRET=${_VERIFICATION_TOKEN_SECRET}
    wait_for: ['push']

# NOTE: These values are dummy. They should be replaced with env vars.
substitutions:
  # [deployment]
  # -- from args
  _BUILD_TARGET_NAME: 'server'
  _BUILD_LOGS_BUCKET: '${_PROJECT_ID}_cloudbuild'
  _POSTGRES_INSTANCE: 'foo-bar-baz-qux-quux'
  _REDIS_CONNECTOR: 'connector'
  _SERVICE_NAME: 'eloquentlog-console-api-server'
  # -- from .env.deploy
  _REGISTRY_HOST: 'eu.gcr.io'
  _REGISTRY_REGION: 'europe-west1'
  # [application]
  # -- from .env.deploy
  _ENV: 'development'
  # server
  _ROCKET_HOST: '0.0.0.0'
  _ROCKET_PORT: '8080'
  _ROCKET_CLI_COLORS: 'off'
  _ROCKET_KEEP_ALIVE: '0'
  # application
  _APPLICATION_URL: 'https://example.org'
  # authentication
  _AUTHENTICATION_TOKEN_ISSUER: 'org.example.production'
  _AUTHENTICATION_TOKEN_KEY_ID: 'key_id'
  _AUTHENTICATION_TOKEN_SECRET: 'secret'
  # cookie
  _COOKIE_DOMAIN: 'example.org'
  _COOKIE_SECURE: 'true'
  # database
  _DATABASE_URL: 'postgresql://user:password@%2Fcloudsql%2Ffoo%3Abar%3Abaz'
  # mailer
  _MAILER_DOMAIN: 'example.org'
  _MAILER_FROM_EMAIL: 'no-reply@example.org'
  _MAILER_FROM_ALIAS: 'Eloquentlog'
  _MAILER_SMTP_HOST: 'server.tld'
  _MAILER_SMTP_PORT: '465'
  _MAILER_SMTP_USERNAME: 'username'
  _MAILER_SMTP_PASSWORD: 'password'
  # message queue
  _MESSAGE_QUEUE_URL: 'redis://h0st:6379/0'
  # session store
  _SESSION_STORE_URL: 'redis://h0st:6379/2'
  # verification
  _VERIFICATION_TOKEN_ISSUER: 'org.example.production'
  _VERIFICATION_TOKEN_KEY_ID: 'key_id'
  _VERIFICATION_TOKEN_SECRET: 'secret'

logsBucket: 'gs://${_BUILD_LOGS_BUCKET}/'
timeout: '3600s'
tags: ['latest']
images: ['${_REGISTRY_HOST}/$PROJECT_ID/${_SERVICE_NAME}']
