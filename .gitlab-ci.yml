stages:
  - verify
  - test
  - build

.diesel:
  - &diesel
    if [ ! -d ".diesel" ]; then
      mkdir .diesel;
      make setup:tool;
      cp /usr/local/cargo/bin/diesel .diesel/diesel;
    else
      cp .diesel/diesel /usr/local/cargo/bin/diesel;
    fi

.postgresql:
  - &postgresql
    # /usr/include/postgresql is symlink to postgresql-11
    if [ ! -d ".postgresql" ]; then
      mkdir .postgresql;
      USE="readline ssl zlib uuid -perl -python"
        emerge --quiet-build=y --nospinner --oneshot dev-db/postgresql:11;
      cp -R /usr/include/postgresql-11/ .postgresql/include;
      cp -R /usr/lib64/postgresql-11/ .postgresql/lib;
      cp -R /usr/share/postgresql-11/ .postgresql/share;
      cp /usr/lib64/postgresql-11/bin/psql .postgresql/psql;
    else
      cp .postgresql/psql /usr/bin/psql;
      cp -R .postgresql/share/ /usr/share/postgresql-11;
      cp -R .postgresql/include/ /usr/include/postgresql-11;
      ln -s /usr/include/postgresql /usr/include/postgresql-11;
      ln -s /usr/include/libpq /usr/include/postgresql-11/libpq;
      cp -R .postgresql/lib/ /usr/lib64/postgresql-11;
      ln -s /usr/lib64/postgresql /usr/lib64/postgresql-11/lib64;
      ln -s /usr/lib64/postgresql-11/lib64/libecpg_compat.so /usr/lib64/libecpg_compat.so;
      ln -s /usr/lib64/postgresql-11/lib64/libecpg.so /usr/lib64/libecpg.so;
      ln -s /usr/lib64/postgresql-11/lib64/libpgtypes.so /usr/lib64/libpgtypes.so;
      ln -s /usr/lib64/postgresql-11/lib64/libpq.so /usr/lib64/libpq.so;
      ln -s /usr/lib64/postgresql-11/lib64/libpq.so.5 /usr/lib64/libpq.so.5;
    fi;
    rm -fr /etc/ld.so.cache;
    ldconfig;

.vendor:
  - &vendor
    if [ ! -d "vendor" ]; then
      make setup:vendor;
    fi

.cache: &cache
  cache:
    key:
      files:
        - Cargo.lock
      prefix: "${CI_PROJECT_NAME}-cache-${CI_CACHE_VERSION}"
    paths:
      - .diesel
      - .cargo
      - .postgresql
      - vendor

.vet-tools: &vet-tools
  image: registry.gitlab.com/grauwoelfchen/portolan/rust-vet-tools:nightly-2021-05-22
  except:
    - tags

.rust: &rust
  image: registry.gitlab.com/grauwoelfchen/portolan/rust:nightly-2021-05-22
  before_script:
    - *postgresql
    - rustc --version
    - cargo --version
    - *vendor
  <<: *cache

check:
  stage: verify
  <<: *vet-tools
  before_script:
    - rustc --version
    - cargo --version
  script:
    - make verify:check

format:
  stage: verify
  <<: *vet-tools
  before_script:
    - rustc --version
    - cargo --version
    - cargo fmt --version
  script:
    - make verify:format

lint:
  stage: verify
  <<: *vet-tools
  before_script:
    - *postgresql
    - rustc --version
    - cargo --version
    - cargo clippy --version
    - *vendor
    - mkdir .git/hooks
  script:
    - make verify:lint
  <<: *cache

test:
  stage: test
  <<: *vet-tools
  services:
    - postgres:11
    - redis:5
  variables:
    ENV: test
    # superuser
    POSTGRES_DB: eloquentlog_test
    POSTGRES_USER: eloquentlog
    POSTGRES_PASSWORD: eloquentlog
    TEST_APPLICATION_URL: "http://127.0.0.1:3000"
    TEST_AUTHENTICATION_TOKEN_ISSUER: "test-authentication-token-issuer"
    TEST_AUTHENTICATION_TOKEN_KEY_ID: "test-authentication-token-key_id"
    TEST_AUTHENTICATION_TOKEN_SECRET: "test-authentication-token-secret"
    TEST_COOKIE_DOMAIN: "127.0.0.1"
    TEST_COOKIE_SECURE: "false"
    TEST_DATABASE_URL: "postgresql://eloquentlog:eloquentlog@postgres:5432/eloquentlog_test"
    TEST_MAILER_DOMAIN: "example.com"
    TEST_MAILER_FROM_EMAIL: "no-reply@example.com"
    TEST_MAILER_FROM_ALIAS: "Eloquentlog - Testing"
    TEST_MAILER_SMTP_HOST: "server.tld"
    TEST_MAILER_SMTP_PORT: "587"
    TEST_MAILER_SMTP_PASSWORD: "username"
    TEST_MAILER_SMTP_USERNAME: "password"
    TEST_MESSAGE_QUEUE_URL: "redis://redis:6379/0"
    TEST_SESSION_STORE_URL: "redis://redis:6379/2"
    TEST_VERIFICATION_TOKEN_ISSUER: "test-verification-token-issuer"
    TEST_VERIFICATION_TOKEN_KEY_ID: "test-verification-token-key_id"
    TEST_VERIFICATION_TOKEN_SECRET: "test-verification-token-secret"
  before_script:
    - *postgresql
    - rustc --version
    - cargo --version
    - kcov --version
    - *diesel
    - *vendor
    - psql $TEST_DATABASE_URL -c "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\""
    - DATABASE_URL=$TEST_DATABASE_URL make schema:migration:commit
    - DATABASE_URL=$TEST_DATABASE_URL make schema:migration:status
    - mkdir -p .git/hooks
  script:
    - make coverage:all
  after_script:
    - cat target/coverage/index.js
  coverage: /"covered":"(\d+(?:\.\d+)?)",/
  <<: *cache

build-debug:
  stage: build
  <<: *rust
  script:
    - make build:debug
  only:
    - master

build-release:
  stage: build
  <<: *rust
  script:
    - make build:release
  only:
    - release@eloquentlog/eloquentlog-console-api
    - tags@eloquentlog/eloquentlog-console-api
